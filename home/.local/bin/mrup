#!/usr/bin/env bash
set -eu -o pipefail

# Wrap raw jira/atlassian link into markdown
# (uses perl because lookaheads are needed to avoid replacing already-markdown links)
function prettify_links() {
    echo "$1" | perl -pe 's,(?<!\]\()(https://centricaenergy.atlassian.net/.*/(.*-.*))(?!\)),\[\2\]\(\1\),g'
}

function clip() {
    mr="$(glab api "projects/:fullpath/merge_requests?source_branch=:branch" | jq '.[] | select(.state == "opened")')"
    title="$(echo "$mr" | jq -r '.title')"
    desc="$(echo "$mr" | jq -r '.description')"
    url="$(echo "$mr" | jq -r '.web_url')"
    {
        echo $title
        echo $url
        echo ""
        [ -n "$desc" ] && prettify_links $desc
    } | pbcopy
}

args=()
browse="false"

while [[ $# -gt 0 ]]; do
  case $1 in
    clip)
      clip
      exit 0
      ;;  
    -b|--browse)
      browse="true"
      shift
      ;;
    *)
      args+=("$1")
      shift
      ;;
  esac
done

if [ ${#args[@]} -gt  1 ]; then
    echo "too many arguments"
    exit 1
fi

function get_default_branch() {
    glab api --paginate "projects/:fullpath/repository/branches" \
        | jq -r '.[] | select(.default == true) | .name'
}

current_branch="$(git branch --show-current)"
default_branch="$(get_default_branch)"

if [ "$current_branch" = "$default_branch" ]; then
    echo "error: current branch == default branch"
    exit 1
fi

branch="${args[1]:-}" # avoid set -u error
if [ -z "$branch" ]; then
    target="$default_branch"
else
    target="$branch"
fi

git push --set-upstream origin "$(git branch --show-current)"
lab mr create -d origin "$target"
clip

if [ "$browse" = "true" ]; then
    open $url
fi
